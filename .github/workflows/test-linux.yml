name: CI Pipeline Tests Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allow manually triggering from the actions tab
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Enable colour output for GTEST and XML file generation
  GTEST_COLOR: yes
  GTEST_OUTPUT: xml:test-results/
  


jobs:
  build:
    # The CMake configure and build commands are platform agnostic anda should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Release
      BOOST_PATH: ${{github.workspace}}/libraries
      BOOST_ROOT: ${{github.workspace}}/libraries/include/boost
      BOOST_VERSION: 1.79.0
    
    steps:
    - uses: actions/checkout@v2

    - name: install 32 bit compilers
      run: |
        sudo apt-get install gcc-multilib
        sudo apt-get install g++-multilib

    - name: Cache boost
      uses: actions/cache@v2
      id: cache-boost
      with:
        # Set the default path as the path to cache
        path: ${{env.BOOST_ROOT}}
        # Use the version as the key to only cache the correct version
        key: boost-${{env.BOOST_VERSION}}

    - name: Install boost 32 bit
      run: |
        mkdir ${{env.BOOST_PATH}}/Boost
        mkdir ${{env.BOOST_PATH}}/Boost/lib
        mkdir ${{env.BOOST_PATH}}/Boost/include
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install libboost-all-dev:i386
        for f in /usr/local/lib/*boost*; do
          sudo mv "$f" "${{env.BOOST_PATH}}/Boost/lib"
        done
        sudo mv /usr/local/lib/cmake ${{env.BOOST_PATH}}/Boost/lib
        sudo mv /usr/local/include/boost ${{env.BOOST_PATH}}/Boost/include
        

    - name: Configure CMake
      run: cmake -DCMAKE_C_FLAGS="-m32" -DCMAKE_CXX_FLAGS="-m32" -DBoost_INCLUDE_DIR=${{env.BOOST_ROOT}}/include -DBoost_LIBRARY_DIRS=${{env.BOOST_ROOT}}/lib -S ${{github.workspace}}/SDALib-CPP -B ${{runner.workspace}}/build

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test_results_xml
        path: ${{runner.workspace}}/build/SDATests/test-results/**/*.xml
