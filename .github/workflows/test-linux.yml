name: CI Pipeline Tests Linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allow manually triggering from the actions tab
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Enable colour output for GTEST and XML file generation
  GTEST_COLOR: yes
  GTEST_OUTPUT: xml:test-results/
  


jobs:
  build:
    # The CMake configure and build commands are platform agnostic anda should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Release
      BOOST_PATH: ${{github.workspace}}/libraries
      BOOST_ROOT: ${{github.workspace}}/libraries/Boost/include/boost
      BOOST_VERSION: 1.79.0
    
    steps:
    - uses: actions/checkout@v2

    - name: Install Compilers
      run: |
        sudo apt update
        sudo apt install gcc-11 g++-11
        sudo apt-get install gcc-11-multilib
        sudo apt-get install g++-11-multilib
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11

    - name: Cache boost
      uses: actions/cache@v2
      id: cache-boost
      with:
        # Set the default path as the path to cache
        path: ${{env.BOOST_ROOT}}
        # Use the version as the key to only cache the correct version
        key: boost-${{env.BOOST_VERSION}}
      
      # wget -O boost_1_79_0.tar.gz https://boostorg.jfrog.io/artifactory/main/release/1.79.0/source/boost_1_79_0.tar.gz
      # tar xzf boost_1_79_0.tar.gz
      # cd boost_1_79_0
      # ./bootstrap.sh
      # ./b2 address-model=32 || echo "build boost with errors"
      # sudo ./b2 install address-model=32 --prefix=${{env.BOOST_PATH}} || echo "installed boost with errors"
      
    - name: Install boost 32 bit
      run: |
        wget -O Boost.tar.gz https://github.com/KungFuDonkey/32BitBoost/releases/download/v1.79.0/Boost.tar.gz
        tar -C ${{env.BOOST_PATH}} -xzf Boost.tar.gz 
        
    - name: Configure CMake
      run: cmake -DCMAKE_EXE_LINKER_FLAGS="-lrt" -DCMAKE_C_FLAGS="-v -m32 -pthread" -DCMAKE_CXX_FLAGS="-v -m32 -pthread" -DBoost_INCLUDE_DIR=${{env.BOOST_ROOT}}/include -DBoost_LIBRARY_DIRS=${{env.BOOST_ROOT}}/lib -S ${{github.workspace}}/SDALib-CPP -B ${{runner.workspace}}/build

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build .

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test_results_xml
        path: ${{runner.workspace}}/build/SDATests/test-results/**/*.xml
