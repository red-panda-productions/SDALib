name: Unit Tests Windows

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allow manually triggering from the actions tab
  workflow_dispatch:


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Enable colour output for GTEST and XML file generation
  GTEST_COLOR: yes
  GTEST_OUTPUT: xml:test-results/
  


jobs:
  build:
    # The CMake configure and build commands are platform agnostic anda should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    env:
      BUILD_TYPE: Release
      BOOST_PATH: ${{github.workspace}}/libraries
      BOOST_ROOT: ${{github.workspace}}/libraries/boost/boost
      BOOST_VERSION: 1.79.0
    
    steps:
    - uses: actions/checkout@v2

    - name: Cache boost
      uses: actions/cache@v2
      id: cache-boost
      with:
        # Set the default path as the path to cache
        path: ${{env.BOOST_ROOT}}
        # Use the version as the key to only cache the correct version
        key: boost-${{env.BOOST_VERSION}}-${{runner.os}}

    - name: Install boost
      if: steps.cache-boost.outputs.cache-hit != 'true'
      uses: MarkusJx/install-boost@v2.3.0
      id: install-boost
      with:
        boost_version: ${{env.BOOST_VERSION}}
        toolset: msvc
        platform_version: 2022
        boost_install_dir: ${{env.BOOST_PATH}}

    - name: Configure CMake
      run: cmake -DCMAKE_BUILD_TYPE=Release -DEXTRA_PY_BUILD_DIR="/Release" -DBoost_INCLUDE_DIR=${{env.BOOST_ROOT}}/include -DBoost_LIBRARY_DIRS=${{env.BOOST_ROOT}}/lib -S ${{github.workspace}}/SDALib-CPP -B ${{runner.workspace}}/build -T host=x86 -A Win32

    - name: Build
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config Release

    - name: Test
      working-directory: ${{runner.workspace}}/build
      run: ctest -V

    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: test_results_xml
        path: ${{runner.workspace}}/build/SDATests/test-results/**/*.xml
