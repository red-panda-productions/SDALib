# This program has been developed by students from the bachelor Computer Science at
# Utrecht University within the Software Project course.
# Â© Copyright Utrecht University (Department of Information and Computing Sciences)

project(SDALib-Python)
include(../cmake/SDAMacros.cmake)

IF(WIN32)
    SET(SETUP_DEFINE_MACROS "('PYTHON_MODULE','1'),('WIN32','1')")
ENDIF(WIN32)

IF(WIN32)
    IF(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_COMPILER_ARGS WINDOWS_COMMAND "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
    ELSE(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_COMPILER_ARGS WINDOWS_COMMAND "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
    ENDIF(CMAKE_BUILD_TYPE MATCHES "Debug")
ENDIF(WIN32)

IF(UNIX)
    IF(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_COMPILER_ARGS UNIX_COMMAND "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_DEBUG}")
    ELSE(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_COMPILER_ARGS UNIX_COMMAND "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")
    ENDIF(CMAKE_BUILD_TYPE MATCHES "Debug")
ENDIF(UNIX)

SET(FIRST TRUE)
FOREACH(COMPILER_ARG ${ALL_COMPILER_ARGS})
    IF(FIRST)
        SET(SETUP_COMPILER_ARGS "${SETUP_COMPILER_ARGS}'${COMPILER_ARG}'")
        SET(FIRST FALSE)
    ELSE(FIRST)
        SET(SETUP_COMPILER_ARGS "${SETUP_COMPILER_ARGS},'${COMPILER_ARG}'")
    ENDIF(FIRST)
ENDFOREACH()

IF(WIN32)
    IF(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_LINKER_ARGS WINDOWS_COMMAND "${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
    ELSE(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_LINKER_ARGS WINDOWS_COMMAND "${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
    ENDIF(CMAKE_BUILD_TYPE MATCHES "Debug")
ENDIF(WIN32)

IF(UNIX)
    IF(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_LINKER_ARGS UNIX_COMMAND "${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_DEBUG}")
    ELSE(CMAKE_BUILD_TYPE MATCHES "Debug")
        separate_arguments(ALL_LINKER_ARGS UNIX_COMMAND "${CMAKE_EXE_LINKER_FLAGS} ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
    ENDIF(CMAKE_BUILD_TYPE MATCHES "Debug")
ENDIF(UNIX)

SET(FIRST TRUE)
FOREACH(LINKER_ARG ${ALL_LINKER_ARGS})
    IF(FIRST)
        SET(SETUP_LINK_ARGS "${SETUP_LINK_ARGS}'${LINKER_ARG}'")
        SET(FIRST FALSE)
    ELSE(FIRST)
        SET(SETUP_LINK_ARGS "${SETUP_LINK_ARGS},'${LINKER_ARG}'")
    ENDIF(FIRST)
ENDFOREACH()



SET(SETUP_INCLUDE_DIRS "'${CMAKE_SOURCE_DIR}/SDALib-Python'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'/home/kungfudonkey/Documents/Projects/SDALib/libraries/include'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SDALib-CPP'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_BINARY_DIR}/SDALib-CPP'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SDALibTests'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams/math'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams/portability'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams/robottools'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams/simuv4'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${CMAKE_SOURCE_DIR}/SpeedDreams/tgf'")
SET(SETUP_INCLUDE_DIRS "${SETUP_INCLUDE_DIRS},'${IPCLIB_INCLUDE_DIR}'")


SET(SETUP_LIBRARY_DIRS "'${IPCLIB_LIB_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SDALib-CPP${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SDALib-Python${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams/simuv4${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams/math${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams/portability${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams/robottools${EXTRA_PY_BUILD_DIR}'")
SET(SETUP_LIBRARY_DIRS "${SETUP_LIBRARY_DIRS},'${CMAKE_BINARY_DIR}/SpeedDreams/tgf${EXTRA_PY_BUILD_DIR}'")

IF(UNIX)
    SET(SETUP_LIBRARIES "'${CMAKE_BINARY_DIR}/SDALib-CPP/SDALib'")
ENDIF(UNIX)

IF(WIN32)
    SET(SETUP_LIBRARIES "'SDALib'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'SDALib-Python'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'SDALib-Pythonlib'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'SpeedDreamsLib'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'simu'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'tgf'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'robottools'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'portability'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'math'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'sg'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'solid2'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'ul'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'IPCLib'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'libexpat'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'js'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'libssl'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'sl'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'ssg'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'User32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'Gdi32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'WinSpool'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'shell32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'Ole32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'OleAut32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'Uuid'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'ComDlg32'")
    SET(SETUP_LIBRARIES "${SETUP_LIBRARIES},'AdvAPI32'")
ENDIF(WIN32)

SET(SETUP_SOURCES "'${CMAKE_CURRENT_SOURCE_DIR}/SpeedDreamsPython.cpp'")

configure_file(setup.py.in setup.py)

add_executable(SDALib-Python "SDATypesConverter.cpp" "SDATypesConverter.h" "PythonDriver.cpp"
        "PythonDriver.h" "PythonDriver.inl" "SpeedDreamsPython.cpp")

add_library(SDALib-Pythonlib "SDATypesConverter.cpp" "SDATypesConverter.h"  "PythonDriver.cpp"
        "PythonDriver.h" "PythonDriver.inl" "SpeedDreamsPython.cpp")

target_compile_definitions(SDALib-Pythonlib PUBLIC "SDA_LIBRARY")

target_link_libraries(
        SDALib-Python
        SDALib
        Python3::Python
)
target_link_libraries(
        SDALib-Pythonlib
        SDALib
        Python3::Python
)

INSTALL_SDA_PACKAGES(SDALib-Python)
INSTALL_SDA_PACKAGES(SDALib-Pythonlib)
INSTALL_SDA_DLLS(SDALib-Python)

target_include_directories(SDALib-Python PUBLIC "../SDALib-CPP")
target_include_directories(SDALib-Pythonlib PUBLIC "../SDALib-CPP")

target_include_directories(SDALib-Python PUBLIC ${IPCLIB_INCLUDE_DIR} ${Python3_INCLUDE_DIRS})
target_include_directories(SDALib-Pythonlib PUBLIC ${IPCLIB_INCLUDE_DIR} ${Python3_INCLUDE_DIRS})

INSTALL_PYTHON_FILES(SDALib-Python)
INSTALL_PYTHON_FILES(SDALib-Pythonlib)

INSTALL_PYTHON_DLLS(SDALib-Python)

IF(UNIX)
    TARGET_LINK_LIBRARIES(SDALib-Python rt)
    TARGET_LINK_LIBRARIES(SDALib-Pythonlib rt)
ENDIF(UNIX)
MESSAGE(STATUS ${CMAKE_CXX_COMPILER})

OPTION(OPTION_AUTO_INSTALL_SIMULATOR_PYTHON "to auto generate the python package" ON)
IF(OPTION_AUTO_INSTALL_SIMULATOR_PYTHON)
    SET(PRE_COMMAND "")
    IF(UNIX)
        SET(PRE_COMMAND "sudo")
    ENDIF(UNIX)

    add_custom_command(TARGET SDALib-Python POST_BUILD
        COMMAND cd \"${CMAKE_CURRENT_BINARY_DIR}\"
        COMMAND ${PRE_COMMAND} ${Python3_EXECUTABLE} \"${CMAKE_CURRENT_BINARY_DIR}/setup.py\" install
        COMMAND_EXPAND_LISTS
    )
ENDIF(OPTION_AUTO_INSTALL_SIMULATOR_PYTHON)

